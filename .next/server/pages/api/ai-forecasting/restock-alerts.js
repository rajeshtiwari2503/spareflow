"use strict";(()=>{var exports={};exports.id="pages/api/ai-forecasting/restock-alerts",exports.ids=["pages/api/ai-forecasting/restock-alerts"],exports.modules={"@prisma/client/edge":c=>{c.exports=require("@prisma/client/edge")},bcryptjs:c=>{c.exports=require("bcryptjs")},jsonwebtoken:c=>{c.exports=require("jsonwebtoken")},"next/dist/compiled/next-server/pages-api.runtime.dev.js":c=>{c.exports=require("next/dist/compiled/next-server/pages-api.runtime.dev.js")},"@prisma/extension-accelerate":c=>{c.exports=import("@prisma/extension-accelerate")},"(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-forecasting%2Frestock-alerts&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cai-forecasting%5Crestock-alerts.ts&middlewareConfigBase64=e30%3D!":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ "(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ "(api)/./node_modules/next/dist/server/future/route-kind.js");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ "(api)/./node_modules/next/dist/build/templates/helpers.js");\n/* harmony import */ var _src_pages_api_ai_forecasting_restock_alerts_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\ai-forecasting\\restock-alerts.ts */ "(api)/./src/pages/api/ai-forecasting/restock-alerts.ts");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_ai_forecasting_restock_alerts_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_ai_forecasting_restock_alerts_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_ai_forecasting_restock_alerts_ts__WEBPACK_IMPORTED_MODULE_3__, "default"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_ai_forecasting_restock_alerts_ts__WEBPACK_IMPORTED_MODULE_3__, "config");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: "/api/ai-forecasting/restock-alerts",\n        pathname: "/api/ai-forecasting/restock-alerts",\n        // The following aren\'t used in production.\n        bundlePath: "",\n        filename: ""\n    },\n    userland: _src_pages_api_ai_forecasting_restock_alerts_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFpLWZvcmVjYXN0aW5nJTJGcmVzdG9jay1hbGVydHMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlNUNwYWdlcyU1Q2FwaSU1Q2FpLWZvcmVjYXN0aW5nJTVDcmVzdG9jay1hbGVydHMudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDaUY7QUFDakY7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDRFQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyw0RUFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXBhZ2VzLWNoYWtyYS8/NDVhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vc3JjXFxcXHBhZ2VzXFxcXGFwaVxcXFxhaS1mb3JlY2FzdGluZ1xcXFxyZXN0b2NrLWFsZXJ0cy50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FpLWZvcmVjYXN0aW5nL3Jlc3RvY2stYWxlcnRzXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWktZm9yZWNhc3RpbmcvcmVzdG9jay1hbGVydHNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-forecasting%2Frestock-alerts&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cai-forecasting%5Crestock-alerts.ts&middlewareConfigBase64=e30%3D!\n')},"(api)/./src/lib/auth.ts":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   getUserFromRequest: () => (/* binding */ getUserFromRequest),\n/* harmony export */   getUserFromToken: () => (/* binding */ getUserFromToken),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   verifyAuth: () => (/* binding */ verifyAuth),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken),\n/* harmony export */   verifyTokenString: () => (/* binding */ verifyTokenString),\n/* harmony export */   withAuth: () => (/* binding */ withAuth),\n/* harmony export */   withAuthAndRole: () => (/* binding */ withAuthAndRole)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ "(api)/./src/lib/prisma.ts");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ "jsonwebtoken");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bcryptjs */ "bcryptjs");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_prisma__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst JWT_SECRET = process.env.JWT_SECRET || "your-secret-key-change-in-production";\n// Hash password\nasync function hashPassword(password) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().hash(password, 12);\n}\n// Verify password\nasync function verifyPassword(password, hashedPassword) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().compare(password, hashedPassword);\n}\n// Generate JWT token\nfunction generateToken(user) {\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign({\n        user\n    }, JWT_SECRET, {\n        expiresIn: "7d"\n    });\n}\n// Verify JWT token (string version)\nfunction verifyTokenString(token) {\n    try {\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n        // Handle both old and new token formats\n        if (decoded.user) {\n            return decoded;\n        } else if (decoded.userId) {\n            // Convert old format to new format\n            return {\n                user: {\n                    id: decoded.userId,\n                    email: decoded.email || "",\n                    name: decoded.name || "",\n                    role: decoded.role || "CUSTOMER"\n                },\n                iat: decoded.iat,\n                exp: decoded.exp\n            };\n        }\n        return null;\n    } catch (error) {\n        console.error("Token verification error:", error);\n        return null;\n    }\n}\n// Get user from token\nasync function getUserFromToken(token) {\n    const decoded = verifyTokenString(token);\n    if (!decoded) return null;\n    try {\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n            where: {\n                id: decoded.user.id\n            },\n            select: {\n                id: true,\n                email: true,\n                name: true,\n                role: true\n            }\n        });\n        return user;\n    } catch (error) {\n        console.error("Error fetching user from token:", error);\n        return null;\n    }\n}\n// Enhanced verifyToken function for API requests\nasync function verifyToken(req) {\n    try {\n        // Try to get token from Authorization header first, then from cookies\n        let token = req.headers.authorization?.replace("Bearer ", "");\n        if (!token && req.cookies.token) {\n            token = req.cookies.token;\n        }\n        if (!token) {\n            return null;\n        }\n        // Verify and decode token\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n        let userId;\n        // Handle both token formats\n        if (decoded.user?.id) {\n            userId = decoded.user.id;\n        } else if (decoded.userId) {\n            userId = decoded.userId;\n        } else {\n            return null;\n        }\n        // Fetch fresh user data from database\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            select: {\n                id: true,\n                email: true,\n                name: true,\n                role: true\n            }\n        });\n        return user;\n    } catch (error) {\n        console.error("Token verification error:", error);\n        return null;\n    }\n}\n// Middleware to protect API routes\nfunction withAuth(handler) {\n    return async (req, res)=>{\n        try {\n            // Try to get token from Authorization header first, then from cookies\n            let token = req.headers.authorization?.replace("Bearer ", "");\n            if (!token && req.cookies.token) {\n                token = req.cookies.token;\n            }\n            console.log("Auth middleware - Token present:", !!token);\n            console.log("Auth middleware - Headers:", req.headers.authorization ? "Authorization header present" : "No authorization header");\n            console.log("Auth middleware - Cookies:", req.cookies.token ? "Token cookie present" : "No token cookie");\n            if (!token) {\n                console.log("Auth middleware - No token provided");\n                return res.status(401).json({\n                    error: "No token provided"\n                });\n            }\n            const user = await getUserFromToken(token);\n            if (!user) {\n                console.log("Auth middleware - Invalid token");\n                return res.status(401).json({\n                    error: "Invalid token"\n                });\n            }\n            console.log("Auth middleware - User authenticated:", user.email, user.role);\n            return handler(req, res, user);\n        } catch (error) {\n            console.error("Auth middleware error:", error);\n            return res.status(500).json({\n                error: "Authentication error"\n            });\n        }\n    };\n}\n// Middleware to protect API routes with role check\nfunction withAuthAndRole(roles, handler) {\n    return withAuth(async (req, res, user)=>{\n        if (!roles.includes(user.role)) {\n            return res.status(403).json({\n                error: "Insufficient permissions"\n            });\n        }\n        return handler(req, res, user);\n    });\n}\n// Get user from request (for pages)\nasync function getUserFromRequest(req) {\n    const token = req.headers.authorization?.replace("Bearer ", "") || req.cookies.token;\n    if (!token) return null;\n    return getUserFromToken(token);\n}\n// Verify auth for API routes with proper result format\nasync function verifyAuth(req) {\n    try {\n        const user = await verifyToken(req);\n        if (user) {\n            return {\n                success: true,\n                user\n            };\n        } else {\n            return {\n                success: false,\n                error: "Authentication failed"\n            };\n        }\n    } catch (error) {\n        console.error("Auth verification error:", error);\n        return {\n            success: false,\n            error: "Authentication error"\n        };\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/auth.ts\n')},"(api)/./src/lib/prisma.ts":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client/edge */ "@prisma/client/edge");\n/* harmony import */ var _prisma_client_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client_edge__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/extension-accelerate */ "@prisma/extension-accelerate");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__]);\n_prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client_edge__WEBPACK_IMPORTED_MODULE_0__.PrismaClient().$extends((0,_prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__.withAccelerate)());\nif (true) globalForPrisma.prisma = prisma;\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtEO0FBQ1c7QUFFN0QsTUFBTUUsa0JBQWtCQztBQUlqQixNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJSiw2REFBWUEsR0FBR0ssUUFBUSxDQUFDSiw0RUFBY0EsSUFBRztBQUU3RixJQUFJSyxJQUF5QixFQUFjSixnQkFBZ0JFLE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXBhZ2VzLWNoYWtyYS8uL3NyYy9saWIvcHJpc21hLnRzPzAxZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQvZWRnZSdcclxuaW1wb3J0IHsgd2l0aEFjY2VsZXJhdGUgfSBmcm9tICdAcHJpc21hL2V4dGVuc2lvbi1hY2NlbGVyYXRlJ1xyXG5cclxuY29uc3QgZ2xvYmFsRm9yUHJpc21hID0gZ2xvYmFsVGhpcyBhcyB1bmtub3duIGFzIHtcclxuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KCkuJGV4dGVuZHMod2l0aEFjY2VsZXJhdGUoKSlcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID0gcHJpc21hIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsIndpdGhBY2NlbGVyYXRlIiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsVGhpcyIsInByaXNtYSIsIiRleHRlbmRzIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/lib/prisma.ts\n')},"(api)/./src/pages/api/ai-forecasting/restock-alerts.ts":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ "(api)/./src/lib/prisma.ts");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth */ "(api)/./src/lib/auth.ts");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_prisma__WEBPACK_IMPORTED_MODULE_0__, _lib_auth__WEBPACK_IMPORTED_MODULE_1__]);\n([_lib_prisma__WEBPACK_IMPORTED_MODULE_0__, _lib_auth__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nasync function handler(req, res) {\n    try {\n        // Authentication check\n        const user = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_1__.verifyToken)(req);\n        if (!user) {\n            return res.status(401).json({\n                error: "Authentication required"\n            });\n        }\n        if (req.method === "GET") {\n            const { brandId, status = "PENDING", limit = "20" } = req.query;\n            // Build where clause based on user role\n            const where = {\n                status: status\n            };\n            if (user.role === "BRAND") {\n                where.brandId = user.id;\n            } else if (brandId && (user.role === "SUPER_ADMIN" || user.role === "DISTRIBUTOR")) {\n                where.brandId = brandId;\n            } else if (user.role === "SUPER_ADMIN") {\n            // Super admin can see all alerts\n            } else {\n                return res.status(403).json({\n                    error: "Access denied"\n                });\n            }\n            const limitNum = Math.min(parseInt(limit) || 20, 100);\n            // Fetch forecasting alerts\n            const alerts = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.forecastingAlert.findMany({\n                where,\n                include: {\n                    part: {\n                        select: {\n                            id: true,\n                            code: true,\n                            name: true,\n                            price: true,\n                            stockQuantity: true,\n                            minStockLevel: true\n                        }\n                    },\n                    brand: {\n                        select: {\n                            id: true,\n                            name: true,\n                            email: true\n                        }\n                    }\n                },\n                orderBy: {\n                    createdAt: "desc"\n                },\n                take: limitNum\n            });\n            // Calculate summary statistics\n            const totalAlerts = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.forecastingAlert.count({\n                where\n            });\n            const criticalAlerts = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.forecastingAlert.count({\n                where: {\n                    ...where,\n                    recommendedQuantity: {\n                        gte: 100\n                    }\n                }\n            });\n            res.status(200).json({\n                success: true,\n                data: {\n                    alerts,\n                    summary: {\n                        total: totalAlerts,\n                        critical: criticalAlerts,\n                        pending: alerts.filter((a)=>a.status === "PENDING").length,\n                        approved: alerts.filter((a)=>a.status === "APPROVED").length\n                    }\n                }\n            });\n        } else if (req.method === "POST") {\n            // Create new restock alert\n            if (user.role !== "BRAND" && user.role !== "SUPER_ADMIN") {\n                return res.status(403).json({\n                    error: "Access denied"\n                });\n            }\n            const { partId, district, forecastedDemand, availableStock, recommendedQuantity } = req.body;\n            if (!partId || !district || !forecastedDemand || !recommendedQuantity) {\n                return res.status(400).json({\n                    error: "Missing required fields",\n                    required: [\n                        "partId",\n                        "district",\n                        "forecastedDemand",\n                        "recommendedQuantity"\n                    ]\n                });\n            }\n            // Verify part exists and belongs to brand (if user is brand)\n            const part = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.part.findUnique({\n                where: {\n                    id: partId\n                },\n                select: {\n                    id: true,\n                    brandId: true,\n                    name: true,\n                    stockQuantity: true\n                }\n            });\n            if (!part) {\n                return res.status(404).json({\n                    error: "Part not found"\n                });\n            }\n            if (user.role === "BRAND" && part.brandId !== user.id) {\n                return res.status(403).json({\n                    error: "Access denied - part does not belong to your brand"\n                });\n            }\n            const alert = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.forecastingAlert.create({\n                data: {\n                    partId,\n                    brandId: part.brandId,\n                    district,\n                    forecastedDemand: parseInt(forecastedDemand),\n                    availableStock: availableStock || part.stockQuantity,\n                    recommendedQuantity: parseInt(recommendedQuantity),\n                    status: "PENDING"\n                },\n                include: {\n                    part: {\n                        select: {\n                            id: true,\n                            code: true,\n                            name: true,\n                            price: true\n                        }\n                    },\n                    brand: {\n                        select: {\n                            id: true,\n                            name: true,\n                            email: true\n                        }\n                    }\n                }\n            });\n            res.status(201).json({\n                success: true,\n                data: alert,\n                message: "Restock alert created successfully"\n            });\n        } else if (req.method === "PUT") {\n            // Update alert status\n            if (user.role !== "BRAND" && user.role !== "SUPER_ADMIN") {\n                return res.status(403).json({\n                    error: "Access denied"\n                });\n            }\n            const { id, status, notes } = req.body;\n            if (!id || !status) {\n                return res.status(400).json({\n                    error: "Missing required fields",\n                    required: [\n                        "id",\n                        "status"\n                    ]\n                });\n            }\n            if (![\n                "PENDING",\n                "APPROVED",\n                "REJECTED"\n            ].includes(status)) {\n                return res.status(400).json({\n                    error: "Invalid status",\n                    validStatuses: [\n                        "PENDING",\n                        "APPROVED",\n                        "REJECTED"\n                    ]\n                });\n            }\n            // Check if alert exists and user has permission\n            const existingAlert = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.forecastingAlert.findUnique({\n                where: {\n                    id\n                },\n                select: {\n                    id: true,\n                    brandId: true\n                }\n            });\n            if (!existingAlert) {\n                return res.status(404).json({\n                    error: "Alert not found"\n                });\n            }\n            if (user.role === "BRAND" && existingAlert.brandId !== user.id) {\n                return res.status(403).json({\n                    error: "Access denied"\n                });\n            }\n            const updatedAlert = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.forecastingAlert.update({\n                where: {\n                    id\n                },\n                data: {\n                    status,\n                    updatedAt: new Date()\n                },\n                include: {\n                    part: {\n                        select: {\n                            id: true,\n                            code: true,\n                            name: true,\n                            price: true\n                        }\n                    },\n                    brand: {\n                        select: {\n                            id: true,\n                            name: true,\n                            email: true\n                        }\n                    }\n                }\n            });\n            res.status(200).json({\n                success: true,\n                data: updatedAlert,\n                message: `Alert ${status.toLowerCase()} successfully`\n            });\n        } else {\n            res.setHeader("Allow", [\n                "GET",\n                "POST",\n                "PUT"\n            ]);\n            res.status(405).end(`Method ${req.method} Not Allowed`);\n        }\n    } catch (error) {\n        console.error("Error in restock alerts API:", error);\n        res.status(500).json({\n            error: "Internal server error",\n            details:  true ? error.message : 0\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/ai-forecasting/restock-alerts.ts\n')}};var __webpack_require__=require("../../../webpack-api-runtime.js");__webpack_require__.C(exports);var __webpack_exec__=c=>__webpack_require__(__webpack_require__.s=c),__webpack_exports__=__webpack_require__.X(0,["vendor-chunks/next"],()=>__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-forecasting%2Frestock-alerts&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cai-forecasting%5Crestock-alerts.ts&middlewareConfigBase64=e30%3D!"));module.exports=__webpack_exports__})();
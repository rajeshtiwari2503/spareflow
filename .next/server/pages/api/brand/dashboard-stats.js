"use strict";(()=>{var exports={};exports.id="pages/api/brand/dashboard-stats",exports.ids=["pages/api/brand/dashboard-stats"],exports.modules={"@prisma/client/edge":n=>{n.exports=require("@prisma/client/edge")},bcryptjs:n=>{n.exports=require("bcryptjs")},jsonwebtoken:n=>{n.exports=require("jsonwebtoken")},"next/dist/compiled/next-server/pages-api.runtime.dev.js":n=>{n.exports=require("next/dist/compiled/next-server/pages-api.runtime.dev.js")},"@prisma/extension-accelerate":n=>{n.exports=import("@prisma/extension-accelerate")},"(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbrand%2Fdashboard-stats&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cbrand%5Cdashboard-stats.ts&middlewareConfigBase64=e30%3D!":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ "(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ "(api)/./node_modules/next/dist/server/future/route-kind.js");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ "(api)/./node_modules/next/dist/build/templates/helpers.js");\n/* harmony import */ var _src_pages_api_brand_dashboard_stats_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\brand\\dashboard-stats.ts */ "(api)/./src/pages/api/brand/dashboard-stats.ts");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_brand_dashboard_stats_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_brand_dashboard_stats_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_brand_dashboard_stats_ts__WEBPACK_IMPORTED_MODULE_3__, "default"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_brand_dashboard_stats_ts__WEBPACK_IMPORTED_MODULE_3__, "config");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: "/api/brand/dashboard-stats",\n        pathname: "/api/brand/dashboard-stats",\n        // The following aren\'t used in production.\n        bundlePath: "",\n        filename: ""\n    },\n    userland: _src_pages_api_brand_dashboard_stats_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmJyYW5kJTJGZGFzaGJvYXJkLXN0YXRzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTVDcGFnZXMlNUNhcGklNUNicmFuZCU1Q2Rhc2hib2FyZC1zdGF0cy50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUN5RTtBQUN6RTtBQUNBLGlFQUFlLHdFQUFLLENBQUMsb0VBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLG9FQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtcGFnZXMtY2hha3JhLz8yYTA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXGJyYW5kXFxcXGRhc2hib2FyZC1zdGF0cy50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2JyYW5kL2Rhc2hib2FyZC1zdGF0c1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2JyYW5kL2Rhc2hib2FyZC1zdGF0c1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbrand%2Fdashboard-stats&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cbrand%5Cdashboard-stats.ts&middlewareConfigBase64=e30%3D!\n')},"(api)/./src/lib/auth.ts":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   getUserFromRequest: () => (/* binding */ getUserFromRequest),\n/* harmony export */   getUserFromToken: () => (/* binding */ getUserFromToken),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   verifyAuth: () => (/* binding */ verifyAuth),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken),\n/* harmony export */   verifyTokenString: () => (/* binding */ verifyTokenString),\n/* harmony export */   withAuth: () => (/* binding */ withAuth),\n/* harmony export */   withAuthAndRole: () => (/* binding */ withAuthAndRole)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ "(api)/./src/lib/prisma.ts");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ "jsonwebtoken");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bcryptjs */ "bcryptjs");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_prisma__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst JWT_SECRET = process.env.JWT_SECRET || "your-secret-key-change-in-production";\n// Hash password\nasync function hashPassword(password) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().hash(password, 12);\n}\n// Verify password\nasync function verifyPassword(password, hashedPassword) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().compare(password, hashedPassword);\n}\n// Generate JWT token\nfunction generateToken(user) {\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign({\n        user\n    }, JWT_SECRET, {\n        expiresIn: "7d"\n    });\n}\n// Verify JWT token (string version)\nfunction verifyTokenString(token) {\n    try {\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n        // Handle both old and new token formats\n        if (decoded.user) {\n            return decoded;\n        } else if (decoded.userId) {\n            // Convert old format to new format\n            return {\n                user: {\n                    id: decoded.userId,\n                    email: decoded.email || "",\n                    name: decoded.name || "",\n                    role: decoded.role || "CUSTOMER"\n                },\n                iat: decoded.iat,\n                exp: decoded.exp\n            };\n        }\n        return null;\n    } catch (error) {\n        console.error("Token verification error:", error);\n        return null;\n    }\n}\n// Get user from token\nasync function getUserFromToken(token) {\n    const decoded = verifyTokenString(token);\n    if (!decoded) return null;\n    try {\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n            where: {\n                id: decoded.user.id\n            },\n            select: {\n                id: true,\n                email: true,\n                name: true,\n                role: true\n            }\n        });\n        return user;\n    } catch (error) {\n        console.error("Error fetching user from token:", error);\n        return null;\n    }\n}\n// Enhanced verifyToken function for API requests\nasync function verifyToken(req) {\n    try {\n        // Try to get token from Authorization header first, then from cookies\n        let token = req.headers.authorization?.replace("Bearer ", "");\n        if (!token && req.cookies.token) {\n            token = req.cookies.token;\n        }\n        if (!token) {\n            return null;\n        }\n        // Verify and decode token\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n        let userId;\n        // Handle both token formats\n        if (decoded.user?.id) {\n            userId = decoded.user.id;\n        } else if (decoded.userId) {\n            userId = decoded.userId;\n        } else {\n            return null;\n        }\n        // Fetch fresh user data from database\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            select: {\n                id: true,\n                email: true,\n                name: true,\n                role: true\n            }\n        });\n        return user;\n    } catch (error) {\n        console.error("Token verification error:", error);\n        return null;\n    }\n}\n// Middleware to protect API routes\nfunction withAuth(handler) {\n    return async (req, res)=>{\n        try {\n            // Try to get token from Authorization header first, then from cookies\n            let token = req.headers.authorization?.replace("Bearer ", "");\n            if (!token && req.cookies.token) {\n                token = req.cookies.token;\n            }\n            console.log("Auth middleware - Token present:", !!token);\n            console.log("Auth middleware - Headers:", req.headers.authorization ? "Authorization header present" : "No authorization header");\n            console.log("Auth middleware - Cookies:", req.cookies.token ? "Token cookie present" : "No token cookie");\n            if (!token) {\n                console.log("Auth middleware - No token provided");\n                return res.status(401).json({\n                    error: "No token provided"\n                });\n            }\n            const user = await getUserFromToken(token);\n            if (!user) {\n                console.log("Auth middleware - Invalid token");\n                return res.status(401).json({\n                    error: "Invalid token"\n                });\n            }\n            console.log("Auth middleware - User authenticated:", user.email, user.role);\n            return handler(req, res, user);\n        } catch (error) {\n            console.error("Auth middleware error:", error);\n            return res.status(500).json({\n                error: "Authentication error"\n            });\n        }\n    };\n}\n// Middleware to protect API routes with role check\nfunction withAuthAndRole(roles, handler) {\n    return withAuth(async (req, res, user)=>{\n        if (!roles.includes(user.role)) {\n            return res.status(403).json({\n                error: "Insufficient permissions"\n            });\n        }\n        return handler(req, res, user);\n    });\n}\n// Get user from request (for pages)\nasync function getUserFromRequest(req) {\n    const token = req.headers.authorization?.replace("Bearer ", "") || req.cookies.token;\n    if (!token) return null;\n    return getUserFromToken(token);\n}\n// Verify auth for API routes with proper result format\nasync function verifyAuth(req) {\n    try {\n        const user = await verifyToken(req);\n        if (user) {\n            return {\n                success: true,\n                user\n            };\n        } else {\n            return {\n                success: false,\n                error: "Authentication failed"\n            };\n        }\n    } catch (error) {\n        console.error("Auth verification error:", error);\n        return {\n            success: false,\n            error: "Authentication error"\n        };\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/auth.ts\n')},"(api)/./src/lib/prisma.ts":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client/edge */ "@prisma/client/edge");\n/* harmony import */ var _prisma_client_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client_edge__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/extension-accelerate */ "@prisma/extension-accelerate");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__]);\n_prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client_edge__WEBPACK_IMPORTED_MODULE_0__.PrismaClient().$extends((0,_prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__.withAccelerate)());\nif (true) globalForPrisma.prisma = prisma;\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtEO0FBQ1c7QUFFN0QsTUFBTUUsa0JBQWtCQztBQUlqQixNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJSiw2REFBWUEsR0FBR0ssUUFBUSxDQUFDSiw0RUFBY0EsSUFBRztBQUU3RixJQUFJSyxJQUF5QixFQUFjSixnQkFBZ0JFLE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXBhZ2VzLWNoYWtyYS8uL3NyYy9saWIvcHJpc21hLnRzPzAxZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQvZWRnZSdcclxuaW1wb3J0IHsgd2l0aEFjY2VsZXJhdGUgfSBmcm9tICdAcHJpc21hL2V4dGVuc2lvbi1hY2NlbGVyYXRlJ1xyXG5cclxuY29uc3QgZ2xvYmFsRm9yUHJpc21hID0gZ2xvYmFsVGhpcyBhcyB1bmtub3duIGFzIHtcclxuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KCkuJGV4dGVuZHMod2l0aEFjY2VsZXJhdGUoKSlcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID0gcHJpc21hIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsIndpdGhBY2NlbGVyYXRlIiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsVGhpcyIsInByaXNtYSIsIiRleHRlbmRzIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/lib/prisma.ts\n')},"(api)/./src/pages/api/brand/dashboard-stats.ts":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ "(api)/./src/lib/prisma.ts");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth */ "(api)/./src/lib/auth.ts");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_prisma__WEBPACK_IMPORTED_MODULE_0__, _lib_auth__WEBPACK_IMPORTED_MODULE_1__]);\n([_lib_prisma__WEBPACK_IMPORTED_MODULE_0__, _lib_auth__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nasync function handler(req, res) {\n    if (req.method !== "GET") {\n        return res.status(405).json({\n            error: "Method not allowed"\n        });\n    }\n    try {\n        // Verify authentication with enhanced error handling\n        const user = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_1__.verifyToken)(req);\n        if (!user) {\n            console.log("Dashboard stats - No user found from token verification");\n            return res.status(401).json({\n                error: "Unauthorized - Please login again"\n            });\n        }\n        if (user.role !== "BRAND") {\n            console.log("Dashboard stats - User role mismatch:", user.role);\n            return res.status(403).json({\n                error: "Access denied. Brand role required."\n            });\n        }\n        console.log("Dashboard stats - Authenticated user:", user.id, user.email, user.role);\n        // Use user ID as brand ID for now\n        const brandId = user.id;\n        // Get current date for monthly calculations\n        const now = new Date();\n        const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n        const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n        // Fetch dashboard statistics with real data\n        const [totalParts, activeShipments, authorizedServiceCenters, authorizedDistributors, walletBalance, pendingReturns, monthlyRevenue, recentShipments, lowStockParts, totalRevenue, totalWalletTransactions, deliveredShipments] = await Promise.all([\n            // Total Parts in catalog\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.part.count({\n                where: {\n                    brandId: brandId\n                }\n            }),\n            // Active Shipments (in-transit)\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.shipment.count({\n                where: {\n                    brandId: brandId,\n                    status: {\n                        in: [\n                            "INITIATED",\n                            "DISPATCHED"\n                        ]\n                    }\n                }\n            }),\n            // Authorized Service Centers\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.brandAuthorizedServiceCenter.count({\n                where: {\n                    brandId: brandId,\n                    status: "Active"\n                }\n            }),\n            // Authorized Distributors\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.brandAuthorizedDistributor.count({\n                where: {\n                    brandId: brandId,\n                    status: "Active"\n                }\n            }),\n            // Wallet Balance\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.wallet.findUnique({\n                where: {\n                    userId: user.id\n                },\n                select: {\n                    balance: true\n                }\n            }),\n            // Pending Returns\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.returnRequest.count({\n                where: {\n                    part: {\n                        brandId: brandId\n                    },\n                    status: "REQUESTED"\n                }\n            }),\n            // Monthly Revenue from wallet transactions\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.walletTransaction.aggregate({\n                where: {\n                    userId: brandId,\n                    type: "DEBIT",\n                    createdAt: {\n                        gte: startOfMonth,\n                        lte: endOfMonth\n                    }\n                },\n                _sum: {\n                    amount: true\n                }\n            }),\n            // Recent Shipments (last 5)\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.shipment.findMany({\n                where: {\n                    brandId: brandId\n                },\n                orderBy: {\n                    createdAt: "desc"\n                },\n                take: 5,\n                select: {\n                    id: true,\n                    status: true,\n                    createdAt: true,\n                    serviceCenter: {\n                        select: {\n                            name: true\n                        }\n                    }\n                }\n            }),\n            // Low Stock Parts - get all parts and filter in memory for field comparison\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.part.findMany({\n                where: {\n                    brandId: brandId,\n                    stockQuantity: {\n                        lte: 5\n                    } // Low stock threshold\n                },\n                select: {\n                    id: true,\n                    name: true,\n                    partNumber: true,\n                    stockQuantity: true,\n                    minStockLevel: true\n                },\n                take: 5\n            }),\n            // Total Revenue (all time)\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.walletTransaction.aggregate({\n                where: {\n                    userId: brandId,\n                    type: "DEBIT"\n                },\n                _sum: {\n                    amount: true\n                }\n            }),\n            // Total wallet transactions for metrics\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.walletTransaction.count({\n                where: {\n                    userId: brandId\n                }\n            }),\n            // Delivered shipments for success rate\n            _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.shipment.count({\n                where: {\n                    brandId: brandId,\n                    status: "DELIVERED"\n                }\n            })\n        ]);\n        // Calculate additional metrics\n        const totalAuthorizedPartners = authorizedServiceCenters + authorizedDistributors;\n        const currentWalletBalance = walletBalance?.balance || 0;\n        const currentMonthlyRevenue = monthlyRevenue._sum.amount || 0;\n        const currentTotalRevenue = totalRevenue._sum.amount || 0;\n        // Debug logging\n        console.log("Dashboard stats debug:", {\n            brandId,\n            totalParts,\n            activeShipments,\n            authorizedServiceCenters,\n            authorizedDistributors,\n            currentWalletBalance,\n            pendingReturns,\n            lowStockPartsCount: lowStockParts.length,\n            currentMonthlyRevenue,\n            currentTotalRevenue\n        });\n        // Get shipment trends (last 7 days) with real data\n        const last7Days = new Date();\n        last7Days.setDate(last7Days.getDate() - 7);\n        const shipmentTrends = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.shipment.groupBy({\n            by: [\n                "createdAt"\n            ],\n            where: {\n                brandId: brandId,\n                createdAt: {\n                    gte: last7Days\n                }\n            },\n            _count: {\n                id: true\n            }\n        });\n        // Get return trends with real data\n        const returnTrends = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.returnRequest.groupBy({\n            by: [\n                "status"\n            ],\n            where: {\n                part: {\n                    brandId: brandId\n                }\n            },\n            _count: {\n                id: true\n            }\n        });\n        // Get top performing parts (by shipment frequency) with real data\n        const topParts = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.boxPart.groupBy({\n            by: [\n                "partId"\n            ],\n            where: {\n                box: {\n                    shipment: {\n                        brandId: brandId,\n                        status: "DELIVERED"\n                    }\n                }\n            },\n            _count: {\n                partId: true\n            },\n            orderBy: {\n                _count: {\n                    partId: "desc"\n                }\n            },\n            take: 5\n        });\n        // Get part details for top performing parts\n        const topPartDetails = await Promise.all(topParts.map(async (item)=>{\n            const part = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.part.findUnique({\n                where: {\n                    id: item.partId\n                },\n                select: {\n                    id: true,\n                    name: true,\n                    partNumber: true,\n                    price: true\n                }\n            });\n            return {\n                ...part,\n                partName: part?.name,\n                shipmentCount: item._count.partId\n            };\n        }));\n        // Calculate performance metrics\n        const totalShipments = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.shipment.count({\n            where: {\n                brandId: brandId\n            }\n        });\n        const shipmentSuccessRate = totalShipments > 0 ? deliveredShipments / totalShipments * 100 : 0;\n        const returnRate = totalShipments > 0 ? pendingReturns / totalShipments * 100 : 0;\n        // Get recent notifications (mock for now as we don\'t have a notification system implemented)\n        const recentNotifications = [];\n        const dashboardStats = {\n            metrics: {\n                totalParts,\n                activeShipments,\n                authorizedPartners: totalAuthorizedPartners,\n                walletBalance: currentWalletBalance,\n                pendingReturns,\n                monthlyRevenue: currentMonthlyRevenue,\n                totalRevenue: currentTotalRevenue,\n                shipmentSuccessRate: Math.round(shipmentSuccessRate * 10) / 10,\n                returnRate: Math.round(returnRate * 10) / 10\n            },\n            breakdown: {\n                authorizedServiceCenters,\n                authorizedDistributors\n            },\n            recentActivity: {\n                shipments: recentShipments,\n                notifications: recentNotifications\n            },\n            alerts: {\n                lowStockParts\n            },\n            trends: {\n                shipments: shipmentTrends,\n                returns: returnTrends\n            },\n            topPerformers: {\n                parts: topPartDetails\n            },\n            summary: {\n                totalTransactions: totalWalletTransactions,\n                averageOrderValue: totalWalletTransactions > 0 ? Math.round(currentTotalRevenue / totalWalletTransactions) : 0,\n                growthRate: 0 // Would need historical data to calculate\n            }\n        };\n        res.status(200).json(dashboardStats);\n    } catch (error) {\n        console.error("Brand dashboard stats error:", error);\n        res.status(500).json({\n            error: "Failed to fetch dashboard statistics",\n            details: error instanceof Error ? error.message : "Unknown error"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/brand/dashboard-stats.ts\n')}};var __webpack_require__=require("../../../webpack-api-runtime.js");__webpack_require__.C(exports);var __webpack_exec__=n=>__webpack_require__(__webpack_require__.s=n),__webpack_exports__=__webpack_require__.X(0,["vendor-chunks/next"],()=>__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbrand%2Fdashboard-stats&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cbrand%5Cdashboard-stats.ts&middlewareConfigBase64=e30%3D!"));module.exports=__webpack_exports__})();
"use strict";(()=>{var exports={};exports.id="pages/api/brand/access-requests",exports.ids=["pages/api/brand/access-requests"],exports.modules={"@prisma/client/edge":e=>{e.exports=require("@prisma/client/edge")},bcryptjs:e=>{e.exports=require("bcryptjs")},jsonwebtoken:e=>{e.exports=require("jsonwebtoken")},"next/dist/compiled/next-server/pages-api.runtime.dev.js":e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.dev.js")},"@prisma/extension-accelerate":e=>{e.exports=import("@prisma/extension-accelerate")},"(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbrand%2Faccess-requests&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cbrand%5Caccess-requests.ts&middlewareConfigBase64=e30%3D!":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ "(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ "(api)/./node_modules/next/dist/server/future/route-kind.js");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ "(api)/./node_modules/next/dist/build/templates/helpers.js");\n/* harmony import */ var _src_pages_api_brand_access_requests_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\brand\\access-requests.ts */ "(api)/./src/pages/api/brand/access-requests.ts");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_brand_access_requests_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_brand_access_requests_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_brand_access_requests_ts__WEBPACK_IMPORTED_MODULE_3__, "default"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_brand_access_requests_ts__WEBPACK_IMPORTED_MODULE_3__, "config");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: "/api/brand/access-requests",\n        pathname: "/api/brand/access-requests",\n        // The following aren\'t used in production.\n        bundlePath: "",\n        filename: ""\n    },\n    userland: _src_pages_api_brand_access_requests_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmJyYW5kJTJGYWNjZXNzLXJlcXVlc3RzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTVDcGFnZXMlNUNhcGklNUNicmFuZCU1Q2FjY2Vzcy1yZXF1ZXN0cy50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUN5RTtBQUN6RTtBQUNBLGlFQUFlLHdFQUFLLENBQUMsb0VBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLG9FQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtcGFnZXMtY2hha3JhLz9mMmFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXGJyYW5kXFxcXGFjY2Vzcy1yZXF1ZXN0cy50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2JyYW5kL2FjY2Vzcy1yZXF1ZXN0c1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2JyYW5kL2FjY2Vzcy1yZXF1ZXN0c1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbrand%2Faccess-requests&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cbrand%5Caccess-requests.ts&middlewareConfigBase64=e30%3D!\n')},"(api)/./src/lib/auth.ts":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   getUserFromRequest: () => (/* binding */ getUserFromRequest),\n/* harmony export */   getUserFromToken: () => (/* binding */ getUserFromToken),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   verifyAuth: () => (/* binding */ verifyAuth),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken),\n/* harmony export */   verifyTokenString: () => (/* binding */ verifyTokenString),\n/* harmony export */   withAuth: () => (/* binding */ withAuth),\n/* harmony export */   withAuthAndRole: () => (/* binding */ withAuthAndRole)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ "(api)/./src/lib/prisma.ts");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ "jsonwebtoken");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bcryptjs */ "bcryptjs");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_prisma__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst JWT_SECRET = process.env.JWT_SECRET || "your-secret-key-change-in-production";\n// Hash password\nasync function hashPassword(password) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().hash(password, 12);\n}\n// Verify password\nasync function verifyPassword(password, hashedPassword) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().compare(password, hashedPassword);\n}\n// Generate JWT token\nfunction generateToken(user) {\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign({\n        user\n    }, JWT_SECRET, {\n        expiresIn: "7d"\n    });\n}\n// Verify JWT token (string version)\nfunction verifyTokenString(token) {\n    try {\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n        // Handle both old and new token formats\n        if (decoded.user) {\n            return decoded;\n        } else if (decoded.userId) {\n            // Convert old format to new format\n            return {\n                user: {\n                    id: decoded.userId,\n                    email: decoded.email || "",\n                    name: decoded.name || "",\n                    role: decoded.role || "CUSTOMER"\n                },\n                iat: decoded.iat,\n                exp: decoded.exp\n            };\n        }\n        return null;\n    } catch (error) {\n        console.error("Token verification error:", error);\n        return null;\n    }\n}\n// Get user from token\nasync function getUserFromToken(token) {\n    const decoded = verifyTokenString(token);\n    if (!decoded) return null;\n    try {\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n            where: {\n                id: decoded.user.id\n            },\n            select: {\n                id: true,\n                email: true,\n                name: true,\n                role: true\n            }\n        });\n        return user;\n    } catch (error) {\n        console.error("Error fetching user from token:", error);\n        return null;\n    }\n}\n// Enhanced verifyToken function for API requests\nasync function verifyToken(req) {\n    try {\n        // Try to get token from Authorization header first, then from cookies\n        let token = req.headers.authorization?.replace("Bearer ", "");\n        if (!token && req.cookies.token) {\n            token = req.cookies.token;\n        }\n        if (!token) {\n            return null;\n        }\n        // Verify and decode token\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n        let userId;\n        // Handle both token formats\n        if (decoded.user?.id) {\n            userId = decoded.user.id;\n        } else if (decoded.userId) {\n            userId = decoded.userId;\n        } else {\n            return null;\n        }\n        // Fetch fresh user data from database\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            select: {\n                id: true,\n                email: true,\n                name: true,\n                role: true\n            }\n        });\n        return user;\n    } catch (error) {\n        console.error("Token verification error:", error);\n        return null;\n    }\n}\n// Middleware to protect API routes\nfunction withAuth(handler) {\n    return async (req, res)=>{\n        try {\n            // Try to get token from Authorization header first, then from cookies\n            let token = req.headers.authorization?.replace("Bearer ", "");\n            if (!token && req.cookies.token) {\n                token = req.cookies.token;\n            }\n            console.log("Auth middleware - Token present:", !!token);\n            console.log("Auth middleware - Headers:", req.headers.authorization ? "Authorization header present" : "No authorization header");\n            console.log("Auth middleware - Cookies:", req.cookies.token ? "Token cookie present" : "No token cookie");\n            if (!token) {\n                console.log("Auth middleware - No token provided");\n                return res.status(401).json({\n                    error: "No token provided"\n                });\n            }\n            const user = await getUserFromToken(token);\n            if (!user) {\n                console.log("Auth middleware - Invalid token");\n                return res.status(401).json({\n                    error: "Invalid token"\n                });\n            }\n            console.log("Auth middleware - User authenticated:", user.email, user.role);\n            return handler(req, res, user);\n        } catch (error) {\n            console.error("Auth middleware error:", error);\n            return res.status(500).json({\n                error: "Authentication error"\n            });\n        }\n    };\n}\n// Middleware to protect API routes with role check\nfunction withAuthAndRole(roles, handler) {\n    return withAuth(async (req, res, user)=>{\n        if (!roles.includes(user.role)) {\n            return res.status(403).json({\n                error: "Insufficient permissions"\n            });\n        }\n        return handler(req, res, user);\n    });\n}\n// Get user from request (for pages)\nasync function getUserFromRequest(req) {\n    const token = req.headers.authorization?.replace("Bearer ", "") || req.cookies.token;\n    if (!token) return null;\n    return getUserFromToken(token);\n}\n// Verify auth for API routes with proper result format\nasync function verifyAuth(req) {\n    try {\n        const user = await verifyToken(req);\n        if (user) {\n            return {\n                success: true,\n                user\n            };\n        } else {\n            return {\n                success: false,\n                error: "Authentication failed"\n            };\n        }\n    } catch (error) {\n        console.error("Auth verification error:", error);\n        return {\n            success: false,\n            error: "Authentication error"\n        };\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/auth.ts\n')},"(api)/./src/lib/prisma.ts":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client/edge */ "@prisma/client/edge");\n/* harmony import */ var _prisma_client_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client_edge__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/extension-accelerate */ "@prisma/extension-accelerate");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__]);\n_prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client_edge__WEBPACK_IMPORTED_MODULE_0__.PrismaClient().$extends((0,_prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__.withAccelerate)());\nif (true) globalForPrisma.prisma = prisma;\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtEO0FBQ1c7QUFFN0QsTUFBTUUsa0JBQWtCQztBQUlqQixNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJSiw2REFBWUEsR0FBR0ssUUFBUSxDQUFDSiw0RUFBY0EsSUFBRztBQUU3RixJQUFJSyxJQUF5QixFQUFjSixnQkFBZ0JFLE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXBhZ2VzLWNoYWtyYS8uL3NyYy9saWIvcHJpc21hLnRzPzAxZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQvZWRnZSdcclxuaW1wb3J0IHsgd2l0aEFjY2VsZXJhdGUgfSBmcm9tICdAcHJpc21hL2V4dGVuc2lvbi1hY2NlbGVyYXRlJ1xyXG5cclxuY29uc3QgZ2xvYmFsRm9yUHJpc21hID0gZ2xvYmFsVGhpcyBhcyB1bmtub3duIGFzIHtcclxuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KCkuJGV4dGVuZHMod2l0aEFjY2VsZXJhdGUoKSlcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID0gcHJpc21hIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsIndpdGhBY2NlbGVyYXRlIiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsVGhpcyIsInByaXNtYSIsIiRleHRlbmRzIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/lib/prisma.ts\n')},"(api)/./src/pages/api/brand/access-requests.ts":(module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ "(api)/./src/lib/prisma.ts");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth */ "(api)/./src/lib/auth.ts");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_prisma__WEBPACK_IMPORTED_MODULE_0__, _lib_auth__WEBPACK_IMPORTED_MODULE_1__]);\n([_lib_prisma__WEBPACK_IMPORTED_MODULE_0__, _lib_auth__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nasync function handler(req, res) {\n    if (req.method !== "GET") {\n        return res.status(405).json({\n            error: "Method not allowed"\n        });\n    }\n    try {\n        // Verify brand authentication\n        const user = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_1__.verifyToken)(req);\n        if (!user || user.role !== "BRAND") {\n            return res.status(403).json({\n                error: "Brand access required"\n            });\n        }\n        const { status, roleType, page = "1", limit = "10" } = req.query;\n        // Build where clause for filtering\n        const where = {\n            brandId: user.id // Only show requests for this brand\n        };\n        if (status && status !== "all") {\n            where.status = status;\n        }\n        if (roleType && roleType !== "all") {\n            where.roleType = roleType;\n        }\n        // Pagination\n        const pageNum = parseInt(page);\n        const limitNum = parseInt(limit);\n        const skip = (pageNum - 1) * limitNum;\n        // Get total count for pagination\n        const totalCount = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.brandAccessRequest.count({\n            where\n        });\n        // Fetch access requests with related data\n        const requests = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.brandAccessRequest.findMany({\n            where,\n            include: {\n                user: {\n                    select: {\n                        id: true,\n                        name: true,\n                        email: true,\n                        phone: true,\n                        role: true\n                    }\n                },\n                handledByAdmin: {\n                    select: {\n                        id: true,\n                        name: true,\n                        role: true\n                    }\n                }\n            },\n            orderBy: [\n                {\n                    status: "asc"\n                },\n                {\n                    createdAt: "desc"\n                } // Most recent first\n            ],\n            skip,\n            take: limitNum\n        });\n        const formattedRequests = requests.map((request)=>({\n                id: request.id,\n                userId: request.userId,\n                userName: request.user.name,\n                userEmail: request.user.email,\n                userPhone: request.user.phone,\n                roleType: request.roleType,\n                message: request.message,\n                documentUrl: request.documentUrl,\n                status: request.status,\n                handledBy: request.handledByAdmin ? {\n                    id: request.handledByAdmin.id,\n                    name: request.handledByAdmin.name,\n                    role: request.handledByAdmin.role\n                } : null,\n                createdAt: request.createdAt.toISOString(),\n                updatedAt: request.updatedAt.toISOString(),\n                // Calculate time since request\n                timeAgo: getTimeAgo(request.createdAt),\n                // Determine urgency based on time\n                urgency: getUrgency(request.createdAt, request.status)\n            }));\n        // Calculate statistics\n        const stats = {\n            total: totalCount,\n            pending: await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.brandAccessRequest.count({\n                where: {\n                    ...where,\n                    status: "PENDING"\n                }\n            }),\n            approved: await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.brandAccessRequest.count({\n                where: {\n                    ...where,\n                    status: "APPROVED"\n                }\n            }),\n            rejected: await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.brandAccessRequest.count({\n                where: {\n                    ...where,\n                    status: "REJECTED"\n                }\n            })\n        };\n        return res.status(200).json({\n            success: true,\n            requests: formattedRequests,\n            pagination: {\n                page: pageNum,\n                limit: limitNum,\n                total: totalCount,\n                pages: Math.ceil(totalCount / limitNum)\n            },\n            stats\n        });\n    } catch (error) {\n        console.error("Error fetching brand access requests:", error);\n        return res.status(500).json({\n            error: "Failed to fetch access requests",\n            details: error instanceof Error ? error.message : "Unknown error"\n        });\n    }\n}\n// Helper function to calculate time ago\nfunction getTimeAgo(date) {\n    const now = new Date();\n    const diffInMs = now.getTime() - date.getTime();\n    const diffInHours = diffInMs / (1000 * 60 * 60);\n    const diffInDays = diffInHours / 24;\n    if (diffInHours < 1) {\n        const minutes = Math.floor(diffInMs / (1000 * 60));\n        return `${minutes} minute${minutes !== 1 ? "s" : ""} ago`;\n    } else if (diffInHours < 24) {\n        const hours = Math.floor(diffInHours);\n        return `${hours} hour${hours !== 1 ? "s" : ""} ago`;\n    } else if (diffInDays < 7) {\n        const days = Math.floor(diffInDays);\n        return `${days} day${days !== 1 ? "s" : ""} ago`;\n    } else {\n        return date.toLocaleDateString();\n    }\n}\n// Helper function to determine urgency\nfunction getUrgency(createdAt, status) {\n    if (status !== "PENDING") return "low";\n    const now = new Date();\n    const diffInHours = (now.getTime() - createdAt.getTime()) / (1000 * 60 * 60);\n    if (diffInHours > 72) return "high"; // More than 3 days\n    if (diffInHours > 24) return "medium"; // More than 1 day\n    return "low";\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/brand/access-requests.ts\n')}};var __webpack_require__=require("../../../webpack-api-runtime.js");__webpack_require__.C(exports);var __webpack_exec__=e=>__webpack_require__(__webpack_require__.s=e),__webpack_exports__=__webpack_require__.X(0,["vendor-chunks/next"],()=>__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbrand%2Faccess-requests&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cbrand%5Caccess-requests.ts&middlewareConfigBase64=e30%3D!"));module.exports=__webpack_exports__})();